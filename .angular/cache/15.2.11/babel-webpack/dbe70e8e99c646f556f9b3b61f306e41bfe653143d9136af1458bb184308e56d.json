{"ast":null,"code":"import { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"src/app/services/chats.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../components/bloquechat/bloquechat.component\";\nimport * as i6 from \"../../components/headerlogin/headerlogin.component\";\nexport let Chat = /*#__PURE__*/(() => {\n  class Chat {\n    constructor(route, authService, chatsService) {\n      this.route = route;\n      this.authService = authService;\n      this.chatsService = chatsService;\n      this.newMessageContent = '';\n      this.userId = this.route.snapshot.paramMap.get('actual');\n      this.targetUserId = this.route.snapshot.paramMap.get('id');\n    }\n    ngOnInit() {\n      console.log('Userid:', this.userId);\n      console.log('targetId', this.targetUserId);\n      this.route.params.pipe(switchMap(params => {\n        const userIds = [this.userId, this.targetUserId];\n        return this.chatsService.getChat(userIds);\n      })).subscribe(chat => {\n        if (chat) {\n          this.chat = chat;\n        } else {\n          this.chatsService.createChat([this.userId, this.targetUserId]).then(newChat => {\n            this.chat = newChat;\n          });\n        }\n      });\n    }\n    sendMessage() {\n      if (this.chat && this.newMessageContent.trim()) {\n        const message = {\n          userId: this.userId,\n          content: this.newMessageContent,\n          timestamp: new Date()\n        };\n        this.chatsService.addMessage(this.chat.id, message).then(() => {\n          this.newMessageContent = '';\n        });\n      }\n    }\n  }\n  Chat.ɵfac = function Chat_Factory(t) {\n    return new (t || Chat)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ChatsService));\n  };\n  Chat.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Chat,\n    selectors: [[\"app-chat\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[1, \"chat-container\"], [\"rootClassName\", \"headerlogin-root-class-name1\"], [3, \"messages\"], [1, \"chat-container1\"], [\"type\", \"text\", \"placeholder\", \"Mensaje\", 1, \"chat-textinput\", \"input\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [\"hidden\", \"\", 3, \"click\"]],\n    template: function Chat_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-headerlogin\", 1)(2, \"app-bloquechat\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function Chat_Template_input_ngModelChange_4_listener($event) {\n          return ctx.newMessageContent = $event;\n        })(\"keyup.enter\", function Chat_Template_input_keyup_enter_4_listener() {\n          return ctx.sendMessage();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function Chat_Template_button_click_5_listener() {\n          return ctx.sendMessage();\n        });\n        i0.ɵɵtext(6, \"Enviar\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"messages\", ctx.chat == null ? null : ctx.chat.mensajes);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.newMessageContent);\n      }\n    },\n    dependencies: [i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.Bloquechat, i6.Headerlogin],\n    styles: [\"[_nghost-%COMP%]{display:contents}.chat-container[_ngcontent-%COMP%]{width:100%;height:550px;display:flex;overflow:auto;min-height:100vh;align-items:center;flex-direction:column;justify-content:flex-start;background-color:#c1ffc2}.chat-container1[_ngcontent-%COMP%]{flex:0 0 auto;width:935px;height:auto;padding:var(--dl-space-space-unit);align-items:center;margin-bottom:var(--dl-space-space-twounits);justify-content:center;background-color:var(--dl-color-success-header)}.chat-textinput[_ngcontent-%COMP%]{width:100%;border-width:3px}@media (max-width: 1200px){.chat-textinput[_ngcontent-%COMP%]{width:100%;height:60px}}\"]\n  });\n  return Chat;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
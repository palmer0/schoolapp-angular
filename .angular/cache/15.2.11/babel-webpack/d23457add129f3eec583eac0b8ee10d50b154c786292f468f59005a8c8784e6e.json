{"ast":null,"code":"import { from } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nexport let UsuariosService = /*#__PURE__*/(() => {\n  class UsuariosService {\n    constructor(firestore) {\n      this.firestore = firestore;\n    }\n    /* agregarUsuario(usuario: Usuario): Observable<void> {\r\n      return new Observable<void>((observer) => {\r\n        // if (this.validarUsuario(usuario)) {\r\n          \r\n          this.firestore.collection('usuarios').add(usuario)\r\n            .then(() => {\r\n              observer.next(); // Emitir valor completado\r\n              observer.complete(); // Completar el observable\r\n            })\r\n            .catch((error) => {\r\n              observer.error(error); // Emitir error si ocurre algún problema\r\n            });\r\n        // } else {\r\n          observer.error('Usuario no válido'); // Emitir error si el usuario no es válido\r\n        // }\r\n      }).pipe(\r\n        catchError((error) => {\r\n          console.error('Error en el observable', error);\r\n          return throwError(error); // Manejar errores y relanzarlos\r\n        })\r\n      );\r\n    } */\n    agregarUsuario(usuario) {\n      return from(this.firestore.collection('usuarios').add(usuario)).pipe(map(() => undefined), catchError(error => {\n        console.error('Error en agregarUsuario', error);\n        throw error;\n      }));\n    }\n    validarUsuario(usuario) {\n      return !!(usuario.nombre_usuario &&\n      // Modifica esto según los campos de tu interfaz Usuario\n      usuario.email_usuario && usuario.rol_id && usuario.fecha_nacimiento_usuario);\n    }\n  }\n  UsuariosService.ɵfac = function UsuariosService_Factory(t) {\n    return new (t || UsuariosService)(i0.ɵɵinject(i1.AngularFirestore));\n  };\n  UsuariosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuariosService,\n    factory: UsuariosService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsuariosService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/usuario.service\";\nimport * as i3 from \"src/app/services/chats.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../components/bloquechat/bloquechat.component\";\nimport * as i6 from \"../../components/headerlogin/headerlogin.component\";\nexport let Chat = /*#__PURE__*/(() => {\n  class Chat {\n    constructor(route, router, usuarioService, chatsService) {\n      this.route = route;\n      this.router = router;\n      this.usuarioService = usuarioService;\n      this.chatsService = chatsService;\n      this.chatId = null;\n      this.chat = null;\n      this.nombredes = null;\n      this.enviadorId = null;\n      this.destinatarioId = null;\n      this.mensaje = '';\n      this.mensajes = [];\n    }\n    ngOnInit() {\n      this.chatId = this.route.snapshot.paramMap.get('id');\n      if (this.chatId) {\n        this.chatsService.getChatById(this.chatId).subscribe(chat => {\n          this.chat = chat;\n          this.enviadorId = this.chat.enviador;\n          if (this.chat) {\n            this.usuarioService.obtenerAlumnoPorId(this.chat.destinatario).subscribe(user => {\n              this.destinatario = user;\n              this.destinatarioId = user.id;\n              this.nombredes = this.destinatario.nombre;\n            }, error => {\n              console.error('Error al obtener al usuario: ', error);\n            });\n          }\n        }, error => {\n          console.error('Error al obtener el chat:', error);\n        });\n      }\n    }\n    onEnter() {\n      if (this.mensaje.trim().length > 0 && this.enviadorId && this.chatId) {\n        const nuevoMensaje = {\n          id: this.chatId,\n          enviador: this.enviadorId,\n          destinatario: this.destinatarioId,\n          mensaje: this.mensaje.trim(),\n          fecha: new Date()\n        };\n        this.chatsService.addMessageToChat(nuevoMensaje).subscribe(() => {\n          this.mensaje = ''; // Limpiar el campo de entrada\n          this.loadMessages(); // Recargar los mensajes\n        }, error => {\n          console.error('Error al enviar el mensaje:', error);\n        });\n      }\n    }\n    loadMessages() {\n      if (this.chatId) {\n        this.chatsService.getMessagesByChatId(this.chatId).subscribe(mensajes => {\n          this.mensajes = mensajes;\n        }, error => {\n          console.error('Error al cargar los mensajes:', error);\n        });\n      }\n    }\n  }\n  Chat.ɵfac = function Chat_Factory(t) {\n    return new (t || Chat)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UsuariosService), i0.ɵɵdirectiveInject(i3.ChatsService));\n  };\n  Chat.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Chat,\n    selectors: [[\"app-chat\"]],\n    decls: 5,\n    vars: 5,\n    consts: [[1, \"chat-container\"], [\"rootClassName\", \"headerlogin-root-class-name1\"], [3, \"nombre\", \"enviadorId\", \"mensajes\", \"destinatarioId\"], [1, \"chat-container1\"], [\"type\", \"text\", \"placeholder\", \"Mensaje\", 1, \"chat-textinput\", \"input\", 3, \"ngModel\", \"ngModelChange\", \"keydown.enter\"]],\n    template: function Chat_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-headerlogin\", 1)(2, \"app-bloquechat\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function Chat_Template_input_ngModelChange_4_listener($event) {\n          return ctx.mensaje = $event;\n        })(\"keydown.enter\", function Chat_Template_input_keydown_enter_4_listener() {\n          return ctx.onEnter();\n        });\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"nombre\", ctx.nombredes)(\"enviadorId\", ctx.enviadorId)(\"mensajes\", ctx.mensajes)(\"destinatarioId\", ctx.destinatarioId);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.mensaje);\n      }\n    },\n    dependencies: [i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.Bloquechat, i6.Headerlogin],\n    styles: [\"[_nghost-%COMP%]{display:contents}.chat-container[_ngcontent-%COMP%]{width:100%;height:550px;display:flex;overflow:auto;min-height:100vh;align-items:center;flex-direction:column;justify-content:flex-start;background-color:#c1ffc2}.chat-container1[_ngcontent-%COMP%]{flex:0 0 auto;width:935px;height:auto;padding:var(--dl-space-space-unit);align-items:center;margin-bottom:var(--dl-space-space-twounits);justify-content:center;background-color:var(--dl-color-success-header)}.chat-textinput[_ngcontent-%COMP%]{width:100%;border-width:3px}@media (max-width: 1200px){.chat-textinput[_ngcontent-%COMP%]{width:100%;height:60px}}\"]\n  });\n  return Chat;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
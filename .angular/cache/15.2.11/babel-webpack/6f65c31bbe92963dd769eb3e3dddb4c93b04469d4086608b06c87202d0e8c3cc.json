{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"./usuario.service\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(firestore, user) {\n      this.firestore = firestore;\n      this.user = user;\n    }\n    login(email, password) {\n      return this.firestore.collection('usuarios', ref => ref.where('email', '==', email).where('contrasena', '==', password)).get().pipe(map(snapshot => {\n        if (snapshot.empty) {\n          return null;\n        }\n        const userDoc = snapshot.docs[0];\n        const userData = userDoc.data();\n        if (userData && typeof userData === 'object') {\n          return Object.assign(Object.assign({}, userData), {\n            id: userDoc.id\n          });\n        }\n        return null;\n      }), catchError(() => of(null)));\n    }\n  }\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.UsuariosService));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
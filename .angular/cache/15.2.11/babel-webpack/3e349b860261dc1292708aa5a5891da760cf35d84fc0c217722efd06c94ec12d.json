{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/services/usuario.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../components/headernologin/headernologin.component\";\nfunction Login_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport let Login = /*#__PURE__*/(() => {\n  class Login {\n    constructor(formBuilder, authService, router, user) {\n      this.formBuilder = formBuilder;\n      this.authService = authService;\n      this.router = router;\n      this.user = user;\n      this.errorMessage = '';\n      this.loginForm = this.formBuilder.group({\n        email: ['', [Validators.required, Validators.email]],\n        contrasena: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(10)]]\n      });\n    }\n    onSubmit() {\n      if (this.loginForm.valid) {\n        const email = this.loginForm.get('email').value;\n        const password = this.loginForm.get('contrasena').value;\n        this.authService.login(email, password).subscribe(user => {\n          console.log(user);\n          if (user && user.rol) {\n            this.redirectBasedOnRole(user.rol, user.id);\n            this.authService.setUserId(user.id);\n          } else {\n            alert('Credenciales inválidas');\n          }\n        }, error => {\n          this.errorMessage = 'Invalid credentials';\n          alert('Credenciales inválidas');\n        });\n      }\n    }\n    redirectBasedOnRole(rol, userId) {\n      const routes = {\n        'administracion': `/mainadmin/${userId}`,\n        'alumno': `/mainalumno/${userId}`,\n        'consejeria': `/mainconserjeria/${userId}`,\n        'jefatura': `/mainjefatura/${userId}`,\n        'padre': `/mainpadres/${userId}`,\n        'profesor': `/mainprofesores/${userId}`\n      };\n      const route = routes[rol] || '/login';\n      this.router.navigate([route]);\n    }\n  }\n  Login.ɵfac = function Login_Factory(t) {\n    return new (t || Login)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.UsuariosService));\n  };\n  Login.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Login,\n    selectors: [[\"app-login\"]],\n    decls: 16,\n    vars: 2,\n    consts: [[1, \"login-container\"], [\"rootClassName\", \"headernologin-root-class-name14\"], [1, \"login-container1\"], [1, \"login-container2\"], [1, \"login-heading\"], [3, \"formGroup\"], [1, \"login-text\"], [\"type\", \"text\", \"required\", \"\", \"minlenght\", \"8\", \"placeholder\", \"micorreo@gmail.com\", \"formControlName\", \"email\", 1, \"login-textinput\", \"input\"], [1, \"login-text1\"], [\"type\", \"password\", \"required\", \"\", \"maxlength\", \"10\", \"minlength\", \"6\", \"placeholder\", \"********\", \"formControlName\", \"contrasena\", 1, \"login-textinput1\", \"input\"], [1, \"login-navlink\", \"button\", 3, \"click\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"]],\n    template: function Login_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-headernologin\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n        i0.ɵɵtext(5, \"Servicio de identificaci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 5)(7, \"span\", 6);\n        i0.ɵɵtext(8, \"Introduce tu correo electr\\u00F3nico\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵelementStart(10, \"span\", 8);\n        i0.ɵɵtext(11, \"Introduce tu contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵelementStart(13, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function Login_Template_button_click_13_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(14, \" Iniciar Sesi\\u00F3n \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(15, Login_div_15_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      }\n    },\n    dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MinLengthValidator, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName, i6.Headernologin],\n    styles: [\"[_nghost-%COMP%]{display:contents}.login-container[_ngcontent-%COMP%]{width:100%;display:flex;min-height:100vh;align-items:center;flex-direction:column;background-color:var(--dl-color-success-fondo)}.login-container1[_ngcontent-%COMP%]{flex:1;width:100%;height:var(--dl-size-size-small);display:flex;align-items:center;margin-left:0;background-size:cover;justify-content:center;background-image:url(/assets/instituto2-1500w.jpg);background-repeat:repeat;background-position:center}.login-container2[_ngcontent-%COMP%]{flex:0 0 auto;width:1000px;height:500px;display:flex;align-self:center;align-items:flex-start;flex-direction:column;justify-content:flex-start;background-color:#469634}.login-heading[_ngcontent-%COMP%]{color:#fff;width:auto;font-size:40px;align-self:center;margin-top:var(--dl-space-space-unit);margin-bottom:20px;background-color:#469634}.login-text[_ngcontent-%COMP%]{color:#fff;font-size:25px;align-self:flex-start;font-style:normal;margin-top:var(--dl-space-space-threeunits);font-weight:700;margin-left:var(--dl-space-space-oneandhalfunits);margin-right:var(--dl-space-space-oneandhalfunits);margin-bottom:0}.login-textinput[_ngcontent-%COMP%]{flex:1;width:950px;margin:var(--dl-space-space-oneandhalfunits);align-self:flex-start;margin-bottom:var(--dl-space-space-twounits);background-color:#deefca}.login-text1[_ngcontent-%COMP%]{color:#fff;font-size:25px;align-self:flex-start;font-style:normal;margin-top:0;font-weight:700;margin-left:var(--dl-space-space-oneandhalfunits);margin-right:var(--dl-space-space-oneandhalfunits);margin-bottom:0}.login-textinput1[_ngcontent-%COMP%]{width:950px;margin:var(--dl-space-space-oneandhalfunits);align-self:flex-start;margin-bottom:var(--dl-space-space-threeunits);background-color:#deefca}.login-navlink[_ngcontent-%COMP%]{align-self:flex-end;margin-left:var(--dl-space-space-oneandhalfunits);margin-right:var(--dl-space-space-twounits);margin-bottom:var(--dl-space-space-twounits);text-decoration:none}@media (max-width: 1200px){.login-container[_ngcontent-%COMP%]{align-items:center;justify-content:flex-start}.login-container1[_ngcontent-%COMP%]{flex:1;width:100%;height:100%;align-self:flex-end;margin-top:0;margin-left:0;justify-content:center}}\"]\n  });\n  return Login;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}